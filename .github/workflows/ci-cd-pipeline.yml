name: ci/cd Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build Frontend Docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Frontend Docker image to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./illusion-frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/illusion-frontend:latest


  build-image:
    name: Build Backend Docker image

    strategy:
      matrix:
        image_name: ["config-server", "discovery-server", "gateway", "user-service", "project-service", "api-generator-service"]

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          cd ./illusion-backend/${{ matrix.image_name }}
          mvn clean
          mvn -B package --file pom.xml

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.image_name }} to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./illusion-backend/${{ matrix.image_name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_name }}:latest
