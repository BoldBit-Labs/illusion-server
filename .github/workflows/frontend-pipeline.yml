name: Frontend Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-image:
    name: Build Frontend Docker image

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: |
          cd illusion-frontend
          docker build . --file Dockerfile --tag illusion-frontend:$(date +%s)
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./illusion-frontend
          file: illusion-frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/illusion-frontend:latest

#  deploy:
#    name: ssh job...
#    runs-on: ubuntu-latest
#    steps:
#    - name: executing remote ssh commands using password
#      uses: appleboy/ssh-action@v1.0.3
#      with:
#        host: ${{ secrets.SSH_IP }}
#        username: ${{ secrets.SSH_USERNAME }}
#        password: ${{ secrets.SSH_PASSWORD }}
#        script: whoami



  # deploy:
  #   name: Deploy Frontend
  #   runs-on: ubuntu-20.04
  #   needs: [ build-image ]
  #   steps:
  #     - name: Set up SSH
  #       uses: webfactory/ssh-agent@v0.5.3
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     - name: Create deployment folder
  #       run: |
  #         ssh -oStrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_IP }} "mkdir -p ci-cd"

  #     - name: Copy docker-compose file
  #       run: |
  #         scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_IP }}:ci-cd/docker-compose.yml

  #     - name: Set ENV variable and deploy
  #       run: |
  #         ssh -oStrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_IP }} <<EOF
  #         cd ci-cd
  #         docker compose -f docker-compose.yml pull -q
  #         docker compose -f docker-compose.yml up -d
  #         EOF
